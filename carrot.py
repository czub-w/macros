from pynput.keyboard import Controller
import time

# Inicjalizacja kontrolera klawiatury
keyboard = Controller()

def press_and_hold_multiple(keys, duration):
    """Trzyma wiele klawiszy przez określony czas."""
    print(f"Trzymam klawisze {keys} przez {duration} sekund...")
    for key in keys:
        keyboard.press(key)  # Naciskamy klawisze

    time.sleep(duration)  # Czekamy określoną ilość czasu

    for key in keys:
        keyboard.release(key)  # Zwolnienie klawiszy
    print(f"Zwolniono klawisze {keys}.")
def press_and_hold(key, duration):
    """Przytrzymuje klawisz przez określony czas."""
    print(f"Trzymam klawisz {key} przez {duration} sekund...")
    keyboard.press(key)
    time.sleep(duration)
    keyboard.release(key)
    print(f"Zwolniono klawisz {key}.")

# Sekwencja naciskania klawiszy FARMA CARROT #23 razy wykonujemy 4-o linijkowy kod time,pressw,time,pressa
def key_sequence():
    time.sleep(0.1)
    press_and_hold('w',8.5)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    time.sleep(0.1)
    press_and_hold('w',9)
    time.sleep(0.1)
    press_and_hold('a',9)
    

if __name__ == "__main__":
    time.sleep(3)
    press_and_hold_multiple(['w', 'd'], 1)
    key_sequence()

